{
	"name": "twig",
	"scopeName": "source.twig",
	"comment": "Twig Template Engine",
	"fileTypes": ["twig"],
	"foldingStartMarker": "({%\\s*(block|filter|for|if|macro|raw))",
	"foldingStopMarker": "({%\\s*(endblock|endfilter|endfor|endif|endmacro|endraw)\\s*%})",
	"patterns": [
		{
			"begin": "({%)\\s*(raw)\\s*(%})",
			"captures": {
				"1": {
					"name": "entity.other.twig.delimiter.tag"
				},
				"2": {
					"name": "keyword.control.twig"
				},
				"3": {
					"name": "entity.other.twig.delimiter.tag"
				}
			},
			"end": "({%)\\s*(endraw)\\s*(%})",
			"name": "comment.block.twig.raw"
		},
		{
			"begin": "{#-?",
			"captures": [
				{
					"name": "entity.other.twig.delimiter.comment"
				}
			],
			"end": "-?#}",
			"name": "comment.block.twig"
		},
		{
			"begin": "{{-?",
			"captures": [
				{
					"name": "entity.other.twig.delimiter.variable"
				}
			],
			"end": "-?}}",
			"name": "meta.scope.twig.variable",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		{
			"begin": "{%-?",
			"captures": [
				{
					"name": "entity.other.twig.delimiter.tag"
				}
			],
			"end": "-?%}",
			"name": "meta.scope.twig.tag",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		}
	],
	"repository": {
		"escaped_char": {
			"match": "\\\\x[0-9A-F]{2}",
			"name": "constant.character.escape.hex.twig"
		},
		"escaped_unicode_char": {
			"captures": {
				"1": {
					"name": "constant.character.escape.unicode.16-bit-hex.twig"
				},
				"2": {
					"name": "constant.character.escape.unicode.32-bit-hex.twig"
				},
				"3": {
					"name": "constant.character.escape.unicode.name.twig"
				}
			},
			"match": "(\\\\U[0-9A-Fa-f]{8})|(\\\\u[0-9A-Fa-f]{4})|(\\\\N\\{[a-zA-Z ]+\\})"
		},
		"expression": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "keyword.control.twig"
						},
						"2": {
							"name": "variable.other.twig.block"
						}
					},
					"match": "\\s*\\b(block)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.control.twig"
						},
						"2": {
							"name": "variable.other.twig.filter"
						}
					},
					"match": "\\s*\\b(filter)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.control.twig"
						},
						"2": {
							"name": "variable.other.twig.test"
						}
					},
					"match": "\\s*\\b(is)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.control.twig"
						}
					},
					"match": "(?<=\\{\\%-|\\{\\%)\\s*\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?!\\s*[,=])"
				},
				{
					"match": "\\b(and|else|if|in|import|not|or|recursive|with(out)?\\s+context)\\b",
					"name": "keyword.control.twig"
				},
				{
					"match": "\\b(true|false|none)\\b",
					"name": "constant.language.twig"
				},
				{
					"match": "\\b(loop|super|self|varargs|kwargs)\\b",
					"name": "variable.language.twig"
				},
				{
					"match": "[a-zA-Z_][a-zA-Z0-9_]*",
					"name": "variable.other.twig"
				},
				{
					"match": "(\\+|\\-|\\*\\*|\\*|\/\/|\/|%)",
					"name": "keyword.operator.arithmetic.twig"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.other.twig"
						},
						"2": {
							"name": "variable.other.twig.filter"
						}
					},
					"match": "(\\|)([a-zA-Z_][a-zA-Z0-9_]*)"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.other.twig"
						},
						"2": {
							"name": "variable.other.twig.attribute"
						}
					},
					"match": "(\\.)([a-zA-Z_][a-zA-Z0-9_]*)"
				},
				{
					"begin": "\\[",
					"captures": [
						{
							"name": "punctuation.other.twig"
						}
					],
					"end": "\\]",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"begin": "\\(",
					"captures": [
						{
							"name": "punctuation.other.twig"
						}
					],
					"end": "\\)",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"begin": "\\{",
					"captures": [
						{
							"name": "punctuation.other.twig"
						}
					],
					"end": "\\}",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"match": "(\\.|:|\\||,)",
					"name": "punctuation.other.twig"
				},
				{
					"match": "(==|<=|=>|<|>|!=)",
					"name": "keyword.operator.comparison.twig"
				},
				{
					"match": "=",
					"name": "keyword.operator.assignment.twig"
				},
				{
					"begin": "\"",
					"beginCaptures": [
						{
							"name": "punctuation.definition.string.begin.twig"
						}
					],
					"end": "\"",
					"endCaptures": [
						{
							"name": "punctuation.definition.string.end.twig"
						}
					],
					"name": "string.quoted.double.twig",
					"patterns": [
						{
							"include": "#string"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": [
						{
							"name": "punctuation.definition.string.begin.twig"
						}
					],
					"end": "'",
					"endCaptures": [
						{
							"name": "punctuation.definition.string.end.twig"
						}
					],
					"name": "string.quoted.single.twig",
					"patterns": [
						{
							"include": "#string"
						}
					]
				},
				{
					"begin": "@\/",
					"beginCaptures": [
						{
							"name": "punctuation.definition.regexp.begin.twig"
						}
					],
					"end": "\/",
					"endCaptures": [
						{
							"name": "punctuation.definition.regexp.end.twig"
						}
					],
					"name": "string.regexp.twig",
					"patterns": [
						{
							"include": "#simple_escapes"
						}
					]
				}
			]
		},
		"simple_escapes": {
			"captures": {
				"1": {
					"name": "constant.character.escape.newline.twig"
				},
				"10": {
					"name": "constant.character.escape.tab.twig"
				},
				"11": {
					"name": "constant.character.escape.vertical-tab.twig"
				},
				"2": {
					"name": "constant.character.escape.backlash.twig"
				},
				"3": {
					"name": "constant.character.escape.double-quote.twig"
				},
				"4": {
					"name": "constant.character.escape.single-quote.twig"
				},
				"5": {
					"name": "constant.character.escape.bell.twig"
				},
				"6": {
					"name": "constant.character.escape.backspace.twig"
				},
				"7": {
					"name": "constant.character.escape.formfeed.twig"
				},
				"8": {
					"name": "constant.character.escape.linefeed.twig"
				},
				"9": {
					"name": "constant.character.escape.return.twig"
				}
			},
			"match": "(\\\\\\n)|(\\\\\\\\)|(\\\\\\\")|(\\\\')|(\\\\a)|(\\\\b)|(\\\\f)|(\\\\n)|(\\\\r)|(\\\\t)|(\\\\v)"
		},
		"string": {
			"patterns": [
				{
					"include": "#simple_escapes"
				},
				{
					"include": "#escaped_char"
				},
				{
					"include": "#escaped_unicode_char"
				}
			]
		}
	}
}